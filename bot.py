import discord
from discord.ext import commands
from discord import app_commands
import os
import random
import asyncio
import time
from keep_alive import keep_alive
from discord.ui import Button, View
from discord.ui import View, Select

token = os.environ['ETHERYA']
intents = discord.Intents.all()
start_time = time.time()
bot = commands.Bot(command_prefix="+", intents=intents)

STAFF_ROLE_ID = 1244339296706760726

@bot.event
async def on_ready():
    print(f"‚úÖ Le bot est connect√© en tant que {bot.user} (ID: {bot.user.id})")

    # Afficher les commandes charg√©es
    print("üìå Commandes disponibles :")
    for command in bot.commands:
        print(f"- {command.name}")

    try:
        # Synchroniser les commandes avec Discord
        synced = await bot.tree.sync()  # Synchronisation des commandes slash
        print(f"‚úÖ Commandes slash synchronis√©es : {[cmd.name for cmd in synced]}")
    except Exception as e:
        print(f"‚ùå Erreur de synchronisation des commandes slash : {e}")
    # Afficher les commandes disponibles apr√®s la synchronisation
    print("üìå Commandes disponibles apr√®s synchronisation :")
    for command in bot.commands:
        print(f"- {command.name}")

#------------------------------------------------------------------------- Commandes de Bienvenue : Message de Bienvenue + Ghost Ping Join
# ID du salon de bienvenue
WELCOME_CHANNEL_ID = 1344194595092697108

# Liste des salons √† pinguer
salon_ids = [
    1342179344889675827,
    1342179655263977492,
    1245380752137388104
]

@bot.event
async def on_member_join(member):
    guild = member.guild
    
    # Envoi du message de bienvenue
    channel = bot.get_channel(WELCOME_CHANNEL_ID)
    if channel:
        embed = discord.Embed(
            title="<a:fete:1172810362261880873> Bienvenue sur le serveur ! <a:fete:1172810362261880873>",
            description=(
                "*<a:fire:1343873843730579478> Ici, l‚Äô√©conomie r√®gne en ma√Ætre, les alliances se forment, les trahisons √©clatent... et ta richesse ne tient qu‚Äô√† un fil ! <a:fire:1343873843730579478>*\n\n"
                "<:better_scroll:1342376863909285930> **Avant de commencer, prends le temps de lire :**\n\n"
                "- <a:fleche3:1290077283100397672> **<#1245380752137388104>** pour √©viter les probl√®mes d√®s le d√©part.\n"
                "- <a:fleche3:1290077283100397672> **<#1340402373708746802>** pour comprendre les bases de l‚Äô√©conomie.\n"
                "- <a:fleche3:1290077283100397672> **<#1340402531712368752>** pour savoir ce que tu peux obtenir.\n\n"
                "üí° *Un doute ? Une question ? Ouvre un ticket et le staff t‚Äôaidera !*\n\n"
                "**Pr√©pare-toi √† b√¢tir ton empire... ou √† tout perdre. Bonne chance ! üçÄ**"
            ),
            color=discord.Color.gold()
        )
        embed.set_image(url="https://raw.githubusercontent.com/Cass64/EtheryaBot/main/images_etherya/etheryaBot_banniere.png")
        await channel.send(f"{member.mention}", embed=embed)
    
    # Envoi du ghost ping une seule fois par salon
    for salon_id in salon_ids:
        salon = bot.get_channel(salon_id)
        if salon:
            try:
                message = await salon.send(f"{member.mention}")
                await message.delete()
            except discord.Forbidden:
                print(f"Le bot n'a pas la permission d'envoyer un message dans {salon.name}.")
            except discord.HTTPException:
                print("Une erreur est survenue lors de l'envoi du message.")

    # IMPORTANT : Permet au bot de continuer √† traiter les commandes
    await bot.process_commands(message)
    
#------------------------------------------------------------------------- Commandes de Gestion : +clear, +nuke, +addrole, +delrole
@bot.command()
async def clear(ctx, amount: int = None):
    # V√©rifie si l'utilisateur a les permissions n√©cessaires (admin ou le r√¥le sp√©cifique)
    if ctx.author.guild_permissions.administrator or 1171489794698784859 in [role.id for role in ctx.author.roles]:
        if amount is None:
            await ctx.send("Merci de pr√©ciser un chiffre entre 2 et 100.")
            return
        if amount < 2 or amount > 100:
            await ctx.send("Veuillez sp√©cifier un nombre entre 2 et 100.")
            return

        deleted = await ctx.channel.purge(limit=amount)
        await ctx.send(f'{len(deleted)} messages supprim√©s.', delete_after=5)
    else:
        await ctx.send("Vous n'avez pas la permission d'utiliser cette commande.")

# Configuration des emojis personnalisables
EMOJIS = {
    "members": "üë•",
    "crown": "üëë",  # Emoji couronne
    "voice": "üé§",
    "boosts": "üöÄ"
}

@bot.command()
async def addrole(ctx, user: discord.Member = None, role: discord.Role = None):
    """Ajoute un r√¥le √† un utilisateur."""
    # V√©rifier si l'utilisateur a le r√¥le [ùë∫◊•] Co-Owner
    if not any(role.id == 1244339296706760726 for role in ctx.author.roles):
        await ctx.send("Erreur : vous devez avoir le r√¥le [ùë∫◊•] Co-Owner pour utiliser cette commande.")
        return

    # V√©rifier si les arguments sont bien fournis
    if user is None or role is None:
        await ctx.send("Erreur : veuillez suivre ce format : +addrole @user @r√¥le")
        return

    try:
        # Ajouter le r√¥le √† l'utilisateur
        await user.add_roles(role)
        await ctx.send(f"{user.mention} a maintenant le r√¥le {role.name} !")
    except discord.Forbidden:
        await ctx.send("Je n'ai pas les permissions n√©cessaires pour attribuer ce r√¥le.")
    except discord.HTTPException as e:
        await ctx.send(f"Une erreur est survenue : {e}")
    
@bot.command()
async def delrole(ctx, user: discord.Member = None, role: discord.Role = None):
    """Retire un r√¥le √† un utilisateur."""
    # V√©rifier si l'utilisateur a le r√¥le [ùë∫◊•] Co-Owner
    if not any(role.id == 1244339296706760726 for role in ctx.author.roles):
        await ctx.send("Erreur : vous devez avoir le r√¥le [ùë∫◊•] Co-Owner pour utiliser cette commande.")
        return

    # V√©rifier si les arguments sont bien fournis
    if user is None or role is None:
        await ctx.send("Erreur : veuillez suivre ce format : +delrole @user @r√¥le")
        return

    try:
        # Retirer le r√¥le √† l'utilisateur
        await user.remove_roles(role)
        await ctx.send(f"{user.mention} n'a plus le r√¥le {role.name} !")
    except discord.Forbidden:
        await ctx.send("Je n'ai pas les permissions n√©cessaires pour retirer ce r√¥le.")
    except discord.HTTPException as e:
        await ctx.send(f"Une erreur est survenue : {e}")

@bot.command()
async def nuke(ctx):
    # V√©rifie si l'utilisateur a les permissions n√©cessaires (admin ou le r√¥le sp√©cifique)
    if ctx.author.guild_permissions.administrator or 1171489794698784859 in [role.id for role in ctx.author.roles]:
        # V√©rifie que la commande a √©t√© lanc√©e dans un salon texte
        if isinstance(ctx.channel, discord.TextChannel):
            # R√©cup√®re le salon actuel
            channel = ctx.channel

            # Sauvegarde les informations du salon
            overwrites = channel.overwrites
            channel_name = channel.name
            category = channel.category
            position = channel.position

            # R√©cup√®re l'ID du salon pour le recr√©er
            guild = channel.guild

            try:
                # Cr√©e un nouveau salon avec les m√™mes permissions et la m√™me position
                await channel.delete()  # Supprime le salon actuel

                # Cr√©e un nouveau salon avec les m√™mes permissions, cat√©gorie et position
                new_channel = await guild.create_text_channel(
                    name=channel_name,
                    overwrites=overwrites,
                    category=category
                )  # Cr√©e le nouveau salon

                # R√©ajuste la position du salon
                await new_channel.edit(position=position)

                # Envoie un message dans le salon d'origine pour pr√©venir de la suppression avant de le recr√©er
                await ctx.send(f"{ctx.author.mention} a nuke le salon {channel_name}. Le salon a √©t√© recr√©√© avec succ√®s.")

                # Envoie un message dans le nouveau salon pour confirmer la recr√©ation
                await new_channel.send(
                    f"Le salon {channel_name} a √©t√© supprim√© et recr√©√©, {ctx.author.mention}."
                )
            except Exception as e:
                await ctx.send(f"Une erreur est survenue lors de la recr√©ation du salon : {e}")
        else:
            await ctx.send("Cette commande doit √™tre utilis√©e dans un salon texte.")
    else:
        await ctx.send("Tu n'as pas les permissions n√©cessaires pour ex√©cuter cette commande.")
    # IMPORTANT : Permet au bot de continuer √† traiter les commandes
    await bot.process_commands(message)
    
#------------------------------------------------------------------------- Commandes d'aide : +aide
@bot.command()
async def aide(ctx):
    role_id = 1166113718602575892  # ID du r√¥le requis
    if not any(role.id == role_id for role in ctx.author.roles):
        await ctx.send("‚ö†Ô∏è Vous n'avez pas la permission d'utiliser cette commande.")
        return

    banner_url = "https://raw.githubusercontent.com/Cass64/EtheryaBot/refs/heads/main/images_etherya/etheryaBot_banniere.png"  # URL de la banni√®re
    embed = discord.Embed(
        title="üè° **Accueil Etherya Gestion**",
        description=f"Hey, bienvenue {ctx.author.mention} sur la page d'accueil d'Etherya Gestion ! üéâ\n\n"
                    "Ici, vous trouverez toutes les informations n√©cessaires pour g√©rer et administrer votre serveur efficacement. üåü",
        color=discord.Color(0x1abc9c)
    )
    embed.set_thumbnail(url=bot.user.avatar.url)
    embed.set_footer(text="D√©velopp√© avec ‚ù§Ô∏è par Iseyg. Merci pour votre soutien !")
    embed.set_image(url=banner_url)  # Ajout de la banni√®re en bas de l'embed

    # Informations g√©n√©rales
    embed.add_field(name="üìö **Informations**", value=f"‚Ä¢ **Mon pr√©fixe** : +\n‚Ä¢ **Nombre de commandes** : X", inline=False)

    # Cr√©ation du menu d√©roulant
    select = discord.ui.Select(
        placeholder="Choisissez une cat√©gorie üëá", 
        options=[
            discord.SelectOption(label="Gestion", description="üìö Commandes pour g√©rer le serveur", emoji="üîß"),
            discord.SelectOption(label="√âconomie", description="üí∏ Commandes √©conomie", emoji="üí∞"),
            discord.SelectOption(label="Ludiques", description="üéâ Commandes amusantes pour d√©tendre l'atmosph√®re et interagir avec les autres.", emoji="üéà"),
            discord.SelectOption(labal="Test & D√©fis", description="üß†Commandes pour testez la personnalit√© et d√©fiez vos amis avec des jeux et des √©valuations.", emoji="üé≤"),
            discord.SelectOption(label="Utilitaire", description="‚öôÔ∏è Commandes utiles", emoji="üîî"),
            discord.SelectOption(label="Mod√©ration", description="‚öñÔ∏è Commandes Mod√©ration", emoji="üî®"),
            discord.SelectOption(label="Cr√©dits", description="üíñ Remerciements et cr√©dits", emoji="üôè")
        ], 
        custom_id="help_select"
    )

    # D√©finir la m√©thode pour g√©rer l'interaction du menu d√©roulant
    async def on_select(interaction: discord.Interaction):
        category = interaction.data['values'][0]
        new_embed = discord.Embed(color=discord.Color(0x1abc9c))
        new_embed.set_image(url=banner_url)  # Ajout de la banni√®re dans chaque cat√©gorie

        if category == "Gestion":
            new_embed.title = "üî® **Commandes de Gestion**"
            new_embed.description = "Bienvenue dans la section gestion ! üìä\nCes commandes sont essentielles pour administrer le serveur. Voici un aper√ßu :"
            new_embed.add_field(name="üîß +clear (2-100)", value="Supprime des messages dans le salon üì¨.\n*Utilis√© pour nettoyer un salon ou supprimer un spam.*", inline=False)
            new_embed.add_field(name="üí• +nuke", value="Efface **tous** les messages du salon üö®.\n*Pour une action plus drastique en cas de chaos ou d'urgence !*.", inline=False)
            new_embed.add_field(name="‚ûï +addrole @user @r√¥le", value="Ajoute un r√¥le √† un utilisateur üë§.\n*Pour attribuer des r√¥les et des privil√®ges sp√©ciaux aux membres.*", inline=False)
            new_embed.add_field(name="‚ûñ +delrole @user @r√¥le", value="Retire un r√¥le √† un utilisateur üö´.\n*Retirer un r√¥le en cas de sanction ou de changement de statut.*", inline=False)
        elif category == "√âconomie":
            new_embed.title = "‚öñÔ∏è **Commandes √âconomie**"
            new_embed.description = "Bienvenue dans la section √©conomie ! üíº\nIci, vous pouvez g√©rer les aspects √©conomiques et de s√©curit√© du serveur."
            new_embed.add_field(name="üè∞ +prison @user", value="Mets un utilisateur en prison pour non-paiement des taxes üè∞.\n*Assurez-vous que tout le monde respecte les r√®gles √©conomiques.*", inline=False)
            new_embed.add_field(name="üöî +arrestation @user", value="Arr√™te un utilisateur apr√®s un braquage rat√© üöî.\n*Appliquez les sanctions apr√®s un braquage rat√© ou une tentative √©chou√©e.*", inline=False)
            new_embed.add_field(name="‚öñÔ∏è +liberation @user", value="Lib√®re un utilisateur emprisonn√© pour taxes impay√©es ‚öñÔ∏è.\n*Lib√©rer un membre apr√®s le paiement ou la lev√©e des charges.*", inline=False)
            new_embed.add_field(name="üîì +evasion", value="Permet de s'√©vader apr√®s un braquage rat√© üîì.\n*Les audacieux peuvent tenter de s'√©chapper pour √©viter les cons√©quences.*", inline=False)
            new_embed.add_field(name="üí∞ +cautionpayer @user", value="Permet de payer la caution d'un membre emprisonn√© suite √† un braquage foir√© üí∞.\n*Rachetez votre libert√© et retrouvez l'acc√®s √† l'√©conomie.*", inline=False)
        elif category == "Ludiques":
            new_embed.title = "üéâ **Commandes de D√©tente**"
            new_embed.description = "Bienvenue dans la section D√©tente ! üéà\nCes commandes sont con√ßues pour vous amuser et interagir de mani√®re l√©g√®re et dr√¥le. Profitez-en !"
            new_embed.add_field(name="ü§ó +hug @user", value="Envoie un c√¢lin √† [membre] avec une image mignonne de c√¢lin.", inline=False)
            new_embed.add_field(name="üí• +slap @user", value="Tu as gifl√© [membre] avec une image dr√¥le de gifle.", inline=False)
            new_embed.add_field(name="üíÉ +dance @user", value="[membre] danse avec une animation rigolote.", inline=False)
            new_embed.add_field(name="üíò +flirt @user", value="Vous avez charm√© [membre] avec un compliment !", inline=False)
            new_embed.add_field(name="üíã +kiss @user", value="Vous avez embrass√© [membre] afin de lui d√©montrer votre amour !", inline=False)
            new_embed.add_field(name="ü§´ +whisper @user [message]", value="[membre] a chuchot√© √† [ton nom] : [message].", inline=False)
            new_embed.add_field(name="üåü +compliment @user", value="Envoie un compliment al√©atoire √† [membre], comme 'Tu es plus g√©nial que tout le chocolat du monde !'.", inline=False)
            new_embed.add_field(name="ü™ô +coinflip", value="Lancez une pi√®ce pour voir si vous gagnez ! ü™ô\n*Tentez votre chance et d√©couvrez si vous avez un coup de chance.*", inline=False)
            new_embed.add_field(name="üé≤ +dice", value="Lancez un d√© √† 6 faces et voyez votre chance ! üé≤\n*Choisissez un num√©ro entre 1 et 6 et voyez si vous avez tir√© le bon!*", inline=False)
            new_embed.add_field(name="üó£Ô∏è +say", value="Faites dire quelque chose au bot √† la place de vous ! üó®Ô∏è\n*Lancez votre message et il sera annonc√© √† tout le serveur !*", inline=False)
        elif category == "Test & D√©fis":
            new_embed.title = "üéØ **Commandes de Tests et D√©fis**"
            new_embed.description = "Bienvenue dans la section Tests et D√©fis ! üé≤\nIci, vous pouvez √©valuer les autres, tester votre compatibilit√© et relever des d√©fis fun !"
            new_embed.add_field(name="üåà +gay @user", value="D√©termine le taux de gayitude d'un utilisateur üåà.\n*Testez votre ouverture d'esprit !*.", inline=False)
            new_embed.add_field(name="üò§ +racist @user", value="D√©termine le taux de racisme d'un utilisateur üò§.\n*Un test amusant √† faire avec vos amis.*", inline=False)
            new_embed.add_field(name="üíò +love @user", value="Affiche le niveau de compatibilit√© amoureuse üíò.\n*Testez votre compatibilit√© avec quelqu'un !*.", inline=False)
            new_embed.add_field(name="üêÄ +rat @user", value="D√©termine le taux de ratitude d'un utilisateur üêÄ.\n*V√©rifiez qui est le plus ‚Äòrat‚Äô parmi vos amis.*", inline=False)
            new_embed.add_field(name="üçÜ +zizi @user", value="√âvalue le niveau de zizi de l'utilisateur üçÜ.\n*Un test ludique pour voir qui a le plus grand ego !*.", inline=False)
            new_embed.add_field(name="ü§° +con @user", value="D√©termine le taux de connerie d'un utilisateur üò§.\n*Un test amusant √† faire avec vos amis.*", inline=False)
            new_embed.add_field(name="ü§™ +fou @user", value="D√©termine le taux de folie d'un utilisateur ü§™.\n*Testez l'√©tat mental de vos amis !*.", inline=False)
            new_embed.add_field(name="üí™ +testo @user", value="D√©termine le taux de testost√©rone d'un utilisateur üí™.\n*Testez la virilit√© de vos amis !*.", inline=False)
            new_embed.add_field(name="üçë +libido @user", value="D√©termine le taux de libido d'un utilisateur üçë.\n*Testez la chaleur de vos amis sous la couette !*.", inline=False)
            new_embed.add_field(name="ü™¥ +pfc @user", value="Jouez √† Pierre-Feuille-Ciseaux avec un utilisateur ! ü™¥\n*Choisissez votre coup et voyez si vous gagnez contre votre adversaire !*.", inline=False)
            new_embed.add_field(name="üî´ +gunfight @user", value="Affrontez un autre utilisateur dans un duel de Gunfight ! üî´\n*Acceptez ou refusez le d√©fi et d√©couvrez qui sera le gagnant !*", inline=False)
            new_embed.add_field(name="üíÄ +kill @user", value="Tuez un autre utilisateur dans un duel de force ! üí•\n*Acceptez ou refusez le d√©fi et d√©couvrez qui sortira vainqueur de cette confrontation!*", inline=False)
            new_embed.add_field(name="üîÑ +reverse [texte]", value="Inverser un texte et le partager avec un autre utilisateur ! üîÑ\n*Lancez un d√©fi pour voir si votre inversion sera correcte !*", inline=False)
            new_embed.add_field(name="‚≠ê +note @user [note sur 10]", value="Notez un autre utilisateur sur 10 ! üåü\n*Exprimez votre avis sur leur comportement ou performance dans le serveur.*", inline=False)
            new_embed.add_field(name="üé≤ +roll", value="Lance un d√© pour g√©n√©rer un nombre al√©atoire entre 1 et 500 üé≤.\n*Essayez votre chance !*.", inline=False)
            new_embed.add_field(name="ü•ä +fight @user", value="Lancez un duel avec un autre utilisateur ! ü•ä\n*Acceptez ou refusez le combat et d√©couvrez qui sera le champion du serveur.*", inline=False)
        elif category == "Utilitaire":
            new_embed.title = "‚öôÔ∏è **Commandes Utilitaires**"
            new_embed.description = "Bienvenue dans la section mod√©ration ! üö®\nCes commandes sont con√ßues pour g√©rer et contr√¥ler l'activit√© du serveur, en assurant une exp√©rience s√ªre et agr√©able pour tous les membres."
            new_embed.add_field(name="üìä +vc", value="Affiche les statistiques du serveur en temps r√©el üìä.\n*Suivez l'√©volution du serveur en direct !*.", inline=False)
            new_embed.add_field(name="üö® +alerte @user <reason>", value="Envoie une alerte au staff en cas de comportement inappropri√© (insultes, spam, etc.) üö®.\n*Note : Si cette commande est utilis√©e abusivement, des sanctions s√©v√®res seront appliqu√©es !*.", inline=False)
        elif category == "Mod√©ration":
            new_embed.title = "üîë **Commandes Mod√©ration**"
            new_embed.add_field(name="üö´ +ban @user", value="Exile un membre du serveur pour un comportement inacceptable üö´.\nL'action de bannir un utilisateur est irr√©versible et est utilis√©e pour des infractions graves aux r√®gles du serveur.*", inline=False)
            new_embed.add_field(name="üöî +unban @user", value="L√®ve le bannissement d'un utilisateur, lui permettant de revenir sur le serveur üîì.\nUnban un utilisateur qui a √©t√© banni, apr√®s examen du cas et d√©cision du staff..*", inline=False)
            new_embed.add_field(name="‚öñÔ∏è +mute @user", value="Rend un utilisateur silencieux en l'emp√™chant de parler pendant un certain temps ü§ê.\nUtilis√© pour punir les membres qui perturbent le serveur par des messages intempestifs ou offensants.", inline=False)
            new_embed.add_field(name="üîì +unmute @user", value="Annule le silence impos√© √† un utilisateur et lui redonne la possibilit√© de communiquer üîä.\nPermet √† un membre de reprendre la parole apr√®s une p√©riode de mute.", inline=False)
            new_embed.add_field(name="‚ö†Ô∏è +warn @user", value="Avertit un utilisateur pour un comportement probl√©matique ‚ö†Ô∏è.\nUn moyen de signaler qu'un membre a enfreint une r√®gle mineure, avant de prendre des mesures plus s√©v√®res.", inline=False)
            new_embed.add_field(name="üö™ +kick @user", value="Expulse un utilisateur du serveur pour une infraction moins grave üö™.\nUn kick expulse temporairement un membre sans le bannir, pour des violations l√©g√®res des r√®gles.", inline=False)
        elif category == "Cr√©dits":
            new_embed.title = "üíñ **Cr√©dits**"
            new_embed.description = "Un immense merci √† **Iseyg** pour le d√©veloppement de ce bot incroyable ! üôè\n\nGr√¢ce √† lui, ce bot est ce qu'il est aujourd'hui. Merci √† toute la communaut√© pour son soutien continu ! üíô"

        await interaction.response.edit_message(embed=new_embed)

    select.callback = on_select  # Attacher la fonction de callback √† l'√©l√©ment select

    # Afficher le message avec le menu d√©roulant
    view = discord.ui.View()
    view.add_item(select)
    
    await ctx.send(embed=embed, view=view)

#------------------------------------------------------------------------- Commandes Fun : Flemme de tout lister
@bot.command()
async def gay(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return
    
    percentage = random.randint(0, 100)
    
    embed = discord.Embed(
        title=f"Analyse de gayitude üåà", 
        description=f"{member.mention} est gay √† **{percentage}%** !\n\n*Le pourcentage varie en fonction des pulsions du membre.*", 
        color=discord.Color.purple()
    )
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)
    
    await ctx.send(embed=embed)

@bot.command()
async def racist(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return
    
    percentage = random.randint(0, 100)
    
    embed = discord.Embed(
        title=f"Analyse de racisme ü™Ñ", 
        description=f"{member.mention} est raciste √† **{percentage}%** !\n\n*Le pourcentage varie en fonction des pulsions du membre.*", 
        color=discord.Color.purple()
    )
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)
    
    await ctx.send(embed=embed)

@bot.command()
async def love(ctx, member: discord.Member = None):
    if not member:
        await ctx.send("Tu n'as pas mentionn√© de membre ! Utilise +love @membre.")
        return
    
    love_percentage = random.randint(0, 100)
    
    embed = discord.Embed(
        title="L'Amour Etheryen",
        description=f"L'amour entre {ctx.author.mention} et {member.mention} est de **{love_percentage}%** !",
        color=discord.Color.red() if love_percentage > 50 else discord.Color.blue()
    )
    embed.set_footer(text="Que l'amour vous guide !")
    embed.set_thumbnail(url="https://img.freepik.com/photos-gratuite/silhouette-mains-coeur-contre-lumieres-ville-nuit_23-2150984259.jpg?ga=GA1.1.719997987.1741155829&semt=ais_hybrid")
    
    await ctx.send(embed=embed)

@bot.command()
async def rat(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return
    
    percentage = random.randint(0, 100)
    
    embed = discord.Embed(
        title=f"Analyse de radinerie üêÅ", 
        description=f"{member.mention} est un rat √† **{percentage}%** !\n\n*Le pourcentage varie en fonction des actes du membre.*", 
        color=discord.Color.purple()
    )
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)
    
    await ctx.send(embed=embed)

@bot.command()
async def con(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return
    
    percentage = random.randint(0, 100)
    
    embed = discord.Embed(
        title="Analyse de connerie ü§°",
        description=f"{member.mention} est con √† **{percentage}%** !\n\n*Le pourcentage varie en fonction des neurones actifs du membre.*",
        color=discord.Color.red()
    )
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)
    
    await ctx.send(embed=embed)

@bot.command()
async def libido(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return
    
    percentage = random.randint(0, 100)
    
    embed = discord.Embed(
        title="Analyse de libido üî•",
        description=f"{member.mention} a une libido √† **{percentage}%** !\n\n*Le pourcentage varie en fonction de l'humeur et du climat.*",
        color=discord.Color.red()
    )
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)
    
    await ctx.send(embed=embed)

# ID du r√¥le requis
role_id = 1166113718602575892

# D√©finir la commande +roll
@bot.command()
async def roll(ctx, x: str = None):
    # V√©rifier si l'utilisateur a le r√¥le requis
    if role_id not in [role.id for role in ctx.author.roles]:
        embed = discord.Embed(
            title="Erreur",
            description="Vous n'avez pas le r√¥le requis pour utiliser cette commande.",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return

    # V√©rifier si x est bien pr√©cis√©
    if x is None:
        embed = discord.Embed(
            title="Erreur",
            description="Vous n'avez pas pr√©cis√© de chiffre entre 1 et 500.",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    try:
        # Convertir x en entier
        x = int(x)
    except ValueError:
        embed = discord.Embed(
            title="Erreur",
            description="Le chiffre doit √™tre un nombre entier.",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # V√©rifier si x est dans les bonnes limites
    if x < 1 or x > 500:
        embed = discord.Embed(
            title="Erreur",
            description="Le chiffre doit √™tre compris entre 1 et 500.",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # G√©n√©rer un nombre al√©atoire entre 1 et x
    result = random.randint(1, x)

    # Cr√©er l'embed de la r√©ponse
    embed = discord.Embed(
        title="R√©sultat du tirage",
        description=f"Le nombre tir√© au hasard entre 1 et {x} est : **{result}**",
        color=discord.Color.green()
    )
    await ctx.send(embed=embed)
    
@bot.command()
async def zizi(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return
    
    # G√©n√©rer une valeur al√©atoire entre 0 et 28 cm
    value = random.randint(0, 50)

    # Cr√©er l'embed
    embed = discord.Embed(
        title="Analyse de la taille du zizi üî•", 
        description=f"{member.mention} a un zizi de **{value} cm** !\n\n*La taille varie selon l'humeur du membre.*", 
        color=discord.Color.blue()
    )
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)

    # Envoyer l'embed
    await ctx.send(embed=embed)

@bot.command()
async def fou(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return
    
    percentage = random.randint(0, 100)
    
    embed = discord.Embed(
        title=f"Analyse de folie ü§™", 
        description=f"{member.mention} est fou √† **{percentage}%** !\n\n*Le pourcentage varie en fonction de l'√©tat mental du membre.*", 
        color=discord.Color.green()
    )
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)
    
    await ctx.send(embed=embed)

@bot.command()
async def testo(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return
    
    percentage = random.randint(0, 100)
    
    embed = discord.Embed(
        title=f"Analyse de testost√©rone üí™", 
        description=f"{member.mention} a un taux de testost√©rone de **{percentage}%** !\n\n*Le pourcentage varie en fonction des niveaux de virilit√© du membre.*", 
        color=discord.Color.blue()
    )
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)
    
    await ctx.send(embed=embed)

class PFCView(View):
    def __init__(self, player1, player2):
        super().__init__(timeout=60)
        self.choices = {}
        self.player1 = player1
        self.player2 = player2
        
        for choice in ['Pierre', 'Feuille', 'Ciseau']:
            self.add_item(PFCButton(choice, self))

    async def check_winner(self):
        if len(self.choices) == 2:
            p1_choice = self.choices[self.player1]
            p2_choice = self.choices[self.player2]
            result = determine_winner(p1_choice, p2_choice)
            
            winner_text = {
                'win': f"{self.player1.mention} a gagn√© !",
                'lose': f"{self.player2.mention} a gagn√© !",
                'draw': "Match nul !"
            }
            
            embed = discord.Embed(title="R√©sultat du Pierre-Feuille-Ciseaux !", description=f"{self.player1.mention} a choisi **{p1_choice}**\n{self.player2.mention} a choisi **{p2_choice}**\n\n{winner_text[result]}", color=0x00FF00)
            await self.player1.send(embed=embed)
            await self.player2.send(embed=embed)
            await self.message.edit(embed=embed, view=None)

class PFCButton(Button):
    def __init__(self, choice, view):
        super().__init__(label=choice, style=discord.ButtonStyle.primary)
        self.choice = choice
        self.pfc_view = view
    
    async def callback(self, interaction: discord.Interaction):
        if interaction.user in [self.pfc_view.player1, self.pfc_view.player2]:
            if interaction.user not in self.pfc_view.choices:
                self.pfc_view.choices[interaction.user] = self.choice
                await interaction.response.send_message(f"{interaction.user.mention} a choisi **{self.choice}**", ephemeral=True)
                if len(self.pfc_view.choices) == 2:
                    await self.pfc_view.check_winner()
            else:
                await interaction.response.send_message("Tu as d√©j√† choisi !", ephemeral=True)
        else:
            await interaction.response.send_message("Tu ne participes pas √† cette partie !", ephemeral=True)

def determine_winner(choice1, choice2):
    beats = {"Pierre": "Ciseau", "Ciseau": "Feuille", "Feuille": "Pierre"}
    if choice1 == choice2:
        return "draw"
    elif beats[choice1] == choice2:
        return "win"
    else:
        return "lose"

class AcceptView(View):
    def __init__(self, ctx, player1, player2):
        super().__init__(timeout=30)
        self.ctx = ctx
        self.player1 = player1
        self.player2 = player2

        self.add_item(AcceptButton("‚úÖ Accepter", discord.ButtonStyle.success, True, self))
        self.add_item(AcceptButton("‚ùå Refuser", discord.ButtonStyle.danger, False, self))

class AcceptButton(Button):
    def __init__(self, label, style, accept, view):
        super().__init__(label=label, style=style)
        self.accept = accept
        self.accept_view = view
    
    async def callback(self, interaction: discord.Interaction):
        if interaction.user != self.accept_view.player2:
            return await interaction.response.send_message("Ce n'est pas √† toi d'accepter ou refuser !", ephemeral=True)
        
        if self.accept:
            embed = discord.Embed(title="Pierre-Feuille-Ciseaux", description=f"{self.accept_view.player1.mention} VS {self.accept_view.player2.mention}\n\nCliquez sur votre choix !", color=0x00FF00)
            await interaction.message.edit(embed=embed, view=PFCView(self.accept_view.player1, self.accept_view.player2))
        else:
            await interaction.message.edit(content=f"Le +pfc a √©t√© refus√© par {self.accept_view.player2.mention}", embed=None, view=None)

@bot.command()
async def pfc(ctx, member: discord.Member = None):
    if not member:
        return await ctx.send("Vous devez mentionner un adversaire pour jouer !")
    if member == ctx.author:
        return await ctx.send("Vous ne pouvez pas jouer contre vous-m√™me !")
    
    embed = discord.Embed(title="D√©fi Pierre-Feuille-Ciseaux", description=f"{member.mention}, acceptes-tu le d√©fi de {ctx.author.mention} ?", color=0xFFA500)
    await ctx.send(embed=embed, view=AcceptView(ctx, ctx.author, member))

@bot.command()
async def gunfight(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send('Erreur : vous devez cibler un membre !')
        return

    if member == ctx.author:
        await ctx.send('Vous ne pouvez pas vous d√©fier vous-m√™me !')
        return

    # Cr√©ation des boutons
    accept_button = Button(label="Oui", style=discord.ButtonStyle.green)
    decline_button = Button(label="Non", style=discord.ButtonStyle.red)

    # D√©finir les actions des boutons
    async def accept(interaction):
        if interaction.user != member:
            await interaction.response.send_message('Ce n\'est pas votre duel !', ephemeral=True)
            return
        result = random.choice([ctx.author, member])
        winner = result.name
        await interaction.message.edit(content=f"{member.mention} a accept√© le duel ! Le gagnant est {winner} !", view=None)
    
    async def decline(interaction):
        if interaction.user != member:
            await interaction.response.send_message('Ce n\'est pas votre duel !', ephemeral=True)
            return
        await interaction.message.edit(content=f"{member.mention} a refus√© le duel.", view=None)

    accept_button.callback = accept
    decline_button.callback = decline

    # Cr√©ation de la vue avec les boutons
    view = View()
    view.add_item(accept_button)
    view.add_item(decline_button)

    # Envoyer l'embed pour le d√©fi
    embed = discord.Embed(
        title="D√©fi de Gunfight",
        description=f"{ctx.author.mention} vous d√©fie √† un duel, {member.mention}. Acceptez-vous ?",
        color=discord.Color.blue()
    )
    await ctx.send(embed=embed, view=view)
    
@bot.command()
async def hug(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return

    # Cr√©er l'embed
    embed = discord.Embed(
        title=f"Tu as donn√© un c√¢lin √† {member.name} ! ü§ó",  # Utilisation de member.name pour afficher le nom simple
        description="Les c√¢lins sont la meilleure chose au monde !",
        color=discord.Color.blue()
    )
    embed.set_image(url="https://media.tenor.com/P6FsFii7pnoAAAAM/hug-warm-hug.gif")
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)  # Utilisation de ctx.author.name
    await ctx.send(embed=embed)


@bot.command()
async def slap(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return

    # Cr√©er l'embed
    embed = discord.Embed(
        title=f"Tu as gifl√© {member.name} !",  # Utilisation de member.name
        description="Oups, √ßa a d√ª faire mal üò±",
        color=discord.Color.red()
    )
    embed.set_image(url="https://media.tenor.com/QRdCcNbk18MAAAAM/slap.gif")
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)  # Utilisation de ctx.author.name
    await ctx.send(embed=embed)


@bot.command()
async def dance(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return

    # Cr√©er l'embed
    embed = discord.Embed(
        title=f"{member.name} danse comme un pro ! üíÉüï∫",  # Utilisation de member.name
        description="Admirez cette danse √©pique !",
        color=discord.Color.green()
    )
    embed.set_image(url="https://media.tenor.com/d7ibtS6MLQgAAAAM/dancing-kid.gif")
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)  # Utilisation de ctx.author.name
    await ctx.send(embed=embed)


@bot.command()
async def flirt(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return

    # Cr√©er l'embed
    embed = discord.Embed(
        title=f"Vous avez charm√© {member.name} avec un sourire √©clatant ! üòç",  # Utilisation de member.name
        description="Vous √™tes irr√©sistible !",
        color=discord.Color.purple()
    )
    embed.set_image(url="https://media.tenor.com/HDdV-0Km1QAAAAAM/hello-sugar.gif")
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)  # Utilisation de ctx.author.name
    await ctx.send(embed=embed)


@bot.command()
async def whisper(ctx, member: discord.Member = None, *, message):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return

    # Cr√©er l'embed
    embed = discord.Embed(
        title=f"Chuchotement de {ctx.author.name} √† {member.name}",  # Utilisation de member.name et ctx.author.name
        description=f"*{message}*",
        color=discord.Color.greyple()
    )
    embed.set_footer(text="Un message secret entre vous deux...")
    embed.set_thumbnail(url=member.avatar.url)
    await ctx.send(embed=embed)

@bot.command()
async def troll(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return

    # Cr√©er l'embed
    embed = discord.Embed(
        title=f"Tu as troll√© {member.name} ! üòÜ",  # Utilisation de member.name
        description=f"Oups, {member.name} s'est fait avoir !",
        color=discord.Color.orange()
    )
    embed.set_image(url="https://media.tenor.com/7Q8TRpW2ZXkAAAAM/yeet-lol.gif")
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)  # Utilisation de ctx.author.name
    await ctx.send(embed=embed)

@bot.command()
async def kiss(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return

    # Cr√©er l'embed
    embed = discord.Embed(
        title=f"Tu as embrass√© {member.name} !",  # Utilisation de member.name
        description="Un doux baiser üíã",  
        color=discord.Color.pink()
    )
    embed.set_image(url="https://media.tenor.com/3DHc1_2PZ-oAAAAM/kiss.gif")
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)  # Utilisation de ctx.author.name
    await ctx.send(embed=embed)

@bot.command()
async def kill(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Vous n'avez cibl√© personne !")
        return

    # Cr√©er l'embed
    embed = discord.Embed(
        title=f"Tu as tu√© {member.name} !",  # Utilisation de member.name
        description="C'est la fin pour lui... üíÄ",  
        color=discord.Color.red()
    )
    embed.set_image(url="https://media1.tenor.com/m/4hO2HfS9fcMAAAAd/toaru-index.gif")
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)  # Utilisation de ctx.author.name
    await ctx.send(embed=embed)


@bot.command()
async def reverse(ctx, *, text: str = None):
    if text is None:
        await ctx.send("Tu n'as pas fourni de texte √† inverser !")
        return

    reversed_text = text[::-1]  # Inverser le texte
    await ctx.send(f"Texte invers√© : {reversed_text}")


@bot.command()
async def note(ctx, member: discord.Member = None, note: int = None):
    if member is None or note is None:
        await ctx.send("Tu n'as pas pr√©cis√© l'utilisateur ni la note !")
        return

    if not 1 <= note <= 10:
        await ctx.send("La note doit √™tre entre 1 et 10.")
        return

    # Cr√©er l'embed
    embed = discord.Embed(
        title=f"{member.name} a re√ßu une note !",
        description=f"Note : {note}/10",
        color=discord.Color.green()
    )
    embed.set_thumbnail(url=member.avatar.url)
    embed.set_footer(text=f"Command√© par {ctx.author.name}", icon_url=ctx.author.avatar.url)
    await ctx.send(embed=embed)


@bot.command()
async def say(ctx, *, text: str = None):
    if text is None:
        await ctx.send("Tu n'as pas √©crit de texte √† dire !")
        return
    await ctx.send(text)


@bot.command()
async def coinflip(ctx):
    import random
    result = random.choice(["Pile", "Face"])
    await ctx.send(f"R√©sultat du coinflip : {result}")


@bot.command()
async def dice(ctx):
    import random
    result = random.randint(1, 6)
    await ctx.send(f"R√©sultat du d√© : {result}")


@bot.command()
async def fight(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send("Tu n'as cibl√© personne pour te battre !")
        return

    # Simuler un combat
    import random
    result = random.choice([f"{ctx.author.name} a gagn√© !", f"{member.name} a gagn√© !", "C'est une √©galit√© !"])

    # Cr√©er l'embed
    embed = discord.Embed(
        title=f"Combat entre {ctx.author.name} et {member.name}",
        description=result,
        color=discord.Color.blue()
    )
    embed.set_thumbnail(url=member.avatar.url)
    await ctx.send(embed=embed)

#------------------------------------------------------------------------- Commandes d'√©conomie : +prison, +evasion, +arrestation, +liberation, +cautionpayer, +ticket_euro_million
# Commande +prison
@bot.command()
@commands.has_role(1165936153418006548)  # ID du r√¥le sans guillemets
async def prison(ctx, member: discord.Member = None):
    if not member:
        await ctx.send("Vous n'avez cibl√© personne.")
        return

    embed = discord.Embed(
        title="La Police Etheryenne vous arr√™te !",
        description="Te voil√† priv√© d'acc√®s de l'√©conomie !",
        color=0xffcc00
    )
    embed.set_image(url="https://i.imgur.com/dX0DSGh.jpeg")
    await ctx.send(embed=embed)

    # Gestion des r√¥les
    role_remove = discord.utils.get(ctx.guild.roles, id=1344407004739014706)
    role_add = discord.utils.get(ctx.guild.roles, id=1344453363261116468)

    if role_remove:
        await member.remove_roles(role_remove)
    if role_add:
        await member.add_roles(role_add)

# Commande +arrestation
@bot.command()
@commands.has_role(1165936153418006548)
async def arrestation(ctx, member: discord.Member = None):
    if not member:
        await ctx.send("Vous n'avez cibl√© personne.")
        return

    embed = discord.Embed(
        title="Vous avez √©t√© arr√™t√© lors d'une tentative de braquage",
        description="Braquer les fourgons c'est pas bien !",
        color=0xff0000
    )
    embed.set_image(url="https://i.imgur.com/uVNxDX2.jpeg")
    await ctx.send(embed=embed)

    # Gestion des r√¥les
    role_remove = discord.utils.get(ctx.guild.roles, id=1344407004739014706)
    role_add = discord.utils.get(ctx.guild.roles, id=1344453363261116468)

    if role_remove:
        await member.remove_roles(role_remove)
    if role_add:
        await member.add_roles(role_add)

# Commande +liberation
@bot.command()
@commands.has_role(1165936153418006548)
async def liberation(ctx, member: discord.Member = None):
    if not member:
        await ctx.send("Vous n'avez cibl√© personne.")
        return

    embed = discord.Embed(
        title="La Police √âtheryenne a d√©cid√© de vous laisser sortir de prison !",
        description="En revanche, si vous refaites une erreur c'est au cachot direct !",
        color=0x00ff00
    )
    embed.set_image(url="https://i.imgur.com/Xh7vqh7.jpeg")
    await ctx.send(embed=embed)

    # Gestion des r√¥les
    role_add = discord.utils.get(ctx.guild.roles, id=1344407004739014706)
    role_remove = discord.utils.get(ctx.guild.roles, id=1344453363261116468)

    if role_add:
        await member.add_roles(role_add)
    if role_remove:
        await member.remove_roles(role_remove)

# Commande +evasion
@bot.command()
@commands.has_role(1344591867068809268)
async def evasion(ctx):
    member = ctx.author  # L'auteur de la commande s'√©vade

    embed = discord.Embed(
        title="Un joueur s'√©vade de prison !",
        description="Gr√¢ce √† un ticket trouv√© √† la f√™te foraine !!",
        color=0x0000ff
    )
    embed.set_image(url="https://i.imgur.com/X8Uje39.jpeg")
    await ctx.send(embed=embed)

    # Gestion des r√¥les
    role_add = discord.utils.get(ctx.guild.roles, id=1344407004739014706)
    role_remove_1 = discord.utils.get(ctx.guild.roles, id=1344453363261116468)
    role_remove_2 = discord.utils.get(ctx.guild.roles, id=1344591867068809268)

    if role_add:
        await member.add_roles(role_add)
    if role_remove_1:
        await member.remove_roles(role_remove_1)
    if role_remove_2:
        await member.remove_roles(role_remove_2)
        
@bot.command()
@commands.has_role(1347165421958205470)
async def cautionpayer(ctx, member: discord.Member = None):
    if not member:
        await ctx.send("Vous n'avez cibl√© personne.")
        return

    embed = discord.Embed(
        title="Caution pay√©e avec succ√®s !",
        description="Vous √™tes maintenant libre de retourner dans l'√©conomie.",
        color=0x00ff00
    )
    embed.set_image(url="https://github.com/Iseyg91/Etherya-Gestion/blob/main/1dnyLPXGJgsrcmMo8Bgi4.jpg?raw=true")
    await ctx.send(embed=embed)

    # Gestion des r√¥les
    role_remove = discord.utils.get(ctx.guild.roles, id=1344453363261116468)
    role_remove = discord.utils.get(ctx.guild.roles, id=1347165421958205470)
    if role_remove:
        await member.remove_roles(role_remove)

@bot.command()
async def ping(ctx):
    latency = round(bot.latency * 1000)  # Latence en ms
    embed = discord.Embed(title="Pong!", description=f"Latence: {latency}ms", color=discord.Color.green())
    await ctx.send(embed=embed)

@bot.command()
async def roleinfo(ctx, *, role_name: str):
    # Cherche le r√¥le par son nom
    role = discord.utils.get(ctx.guild.roles, name=role_name)
    
    if role is None:
        embed = discord.Embed(title="Erreur", description="R√¥le introuvable.", color=discord.Color.red())
        await ctx.send(embed=embed)
    else:
        embed = discord.Embed(title=f"Informations sur le r√¥le: {role.name}", color=role.color)
        embed.add_field(name="ID", value=role.id)
        embed.add_field(name="Couleur", value=str(role.color))
        embed.add_field(name="Nombre de membres", value=len(role.members))
        embed.add_field(name="Position", value=role.position)
        await ctx.send(embed=embed)

@bot.command()
async def uptime(ctx):
    uptime_seconds = round(time.time() - start_time)
    days = uptime_seconds // (24 * 3600)
    hours = (uptime_seconds % (24 * 3600)) // 3600
    minutes = (uptime_seconds % 3600) // 60
    seconds = uptime_seconds % 60
    embed = discord.Embed(
        title="Uptime du bot",
        description=f"Le bot est en ligne depuis : {days} jours, {hours} heures, {minutes} minutes, {seconds} secondes",
        color=discord.Color.blue()
    )
    await ctx.send(embed=embed)

AUTHORIZED_ROLES = ["1341458600559644672"]

@bot.command()
async def ticket_euro_million(ctx, user: discord.Member):
    # G√©n√©rer 5 chiffres entre 0 et 5
    numeros = [str(random.randint(0, 5)) for _ in range(5)]
    combinaison = " - ".join(numeros)
    
    # Cr√©er l'embed pour le salon o√π la commande a √©t√© ex√©cut√©e
    embed_user = discord.Embed(
        title="üéüÔ∏è Ticket Euro Million",
        description=f"Voici votre combinaison, **{user.mention}** : **{combinaison}**\n\n"
                    f"Bonne chance ! üçÄ",
        color=discord.Color.gold()
    )
    embed_user.set_footer(text="Ticket g√©n√©r√© par " + ctx.author.name)

    # Envoie de l'embed dans le salon o√π la commande a √©t√© effectu√©e
    await ctx.send(embed=embed_user)
    
    # Cr√©er un deuxi√®me embed pour le salon sp√©cifique
    embed_announce = discord.Embed(
        title="üéüÔ∏è Euro Million - R√©sultat",
        description=f"**{user.mention}** a tir√© le combin√© suivant : **{combinaison}**\n\n"
                    f"Commande ex√©cut√©e par : **{ctx.author.mention}**",
        color=discord.Color.green()
    )
    embed_announce.set_footer(text="Ticket g√©n√©r√© avec succ√®s !")

    # Envoie de l'embed dans le salon sp√©cifique (ID du salon : 1343358346287120514)
    salon_announce = bot.get_channel(1343358346287120514)
    if salon_announce:
        await salon_announce.send(embed=embed_announce)
    else:
        await ctx.send("Erreur : Le salon d'annonce est introuvable.")
#------------------------------------------------------------------------- Commandes de Moderation : +ban, +unban, +mute, +unmute, +kick, +warn
# Gestion des erreurs pour les commandes
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.MissingRole):
        await ctx.send("Vous n'avez pas la permission d'utiliser cette commande.")
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("Il manque un argument √† la commande.")
    else:
        await ctx.send(f"Une erreur est survenue : {error}")

MOD_ROLE_ID = 1168109892851204166
MUTED_ROLE_ID = 1170488926834798602
IMMUNE_ROLE_ID = 1170326040485318686
LOG_CHANNEL_ID = 1345349357532090399

async def send_log(ctx, member, action, reason, duration=None):
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        embed = discord.Embed(title="Formulaire des sanctions", color=discord.Color.red())
        embed.add_field(name="Pseudo de la personne sanctionn√©e:", value=member.mention, inline=False)
        embed.add_field(name="Pseudo du mod√©rateur:", value=ctx.author.mention, inline=False)
        embed.add_field(name="Sanction:", value=action, inline=False)
        embed.add_field(name="Raison:", value=reason, inline=False)
        if duration:
            embed.add_field(name="Dur√©e:", value=duration, inline=False)
        await log_channel.send(embed=embed)

async def send_dm(member, action, reason, duration=None):
    try:
        embed = discord.Embed(title="Sanction re√ßue", color=discord.Color.red())
        embed.add_field(name="Sanction:", value=action, inline=False)
        embed.add_field(name="Raison:", value=reason, inline=False)
        if duration:
            embed.add_field(name="Dur√©e:", value=duration, inline=False)
        await member.send(embed=embed)
    except:
        print(f"Impossible d'envoyer un MP √† {member.display_name}")

@bot.event
async def on_ready():
    print(f'Connect√© en tant que {bot.user}')

async def check_permissions(ctx):
    mod_role = discord.utils.get(ctx.guild.roles, id=MOD_ROLE_ID)
    if mod_role in ctx.author.roles:
        return True
    else:
        await ctx.send("Vous n'avez pas la permission d'utiliser cette commande.")
        return False

async def is_immune(member):
    immune_role = discord.utils.get(member.guild.roles, id=IMMUNE_ROLE_ID)
    return immune_role in member.roles

@bot.command()
async def ban(ctx, member: discord.Member, *, reason="Aucune raison sp√©cifi√©e"):
    if await check_permissions(ctx) and not await is_immune(member):
        await member.ban(reason=reason)
        await ctx.send(f"{member.mention} a √©t√© banni.")
        await send_log(ctx, member, "Ban", reason)
        await send_dm(member, "Ban", reason)

@bot.command()
async def unban(ctx, user_id: int):
    if await check_permissions(ctx):
        user = await bot.fetch_user(user_id)
        await ctx.guild.unban(user)
        await ctx.send(f"{user.mention} a √©t√© d√©banni.")
        await send_log(ctx, user, "Unban", "R√©int√©gration")
        await send_dm(user, "Unban", "R√©int√©gration")

@bot.command()
async def kick(ctx, member: discord.Member, *, reason="Aucune raison sp√©cifi√©e"):
    if await check_permissions(ctx) and not await is_immune(member):
        await member.kick(reason=reason)
        await ctx.send(f"{member.mention} a √©t√© expuls√©.")
        await send_log(ctx, member, "Kick", reason)
        await send_dm(member, "Kick", reason)

@bot.command()
async def mute(ctx, member: discord.Member, duration: str, unit: str, *, reason="Aucune raison sp√©cifi√©e"):
    # V√©rification si l'utilisateur a le r√¥le autoris√©
    if not any(role.id == 1168109892851204166 for role in ctx.author.roles):
        await ctx.send("Vous n'avez pas la permission d'utiliser cette commande.")
        return

    # V√©rification de la validit√© de la dur√©e
    try:
        duration = int(duration)  # Conversion de la dur√©e en entier
    except ValueError:
        await ctx.send("La dur√©e doit √™tre un nombre valide.")
        return

    if await check_permissions(ctx) and not await is_immune(member):
        muted_role = discord.utils.get(ctx.guild.roles, id=MUTED_ROLE_ID)
        await member.add_roles(muted_role)
        
        if unit.lower() in ["m", "minute", "minutes"]:
            seconds = duration * 60
            duration_str = f"{duration} minute(s)"
        elif unit.lower() in ["h", "heure", "heures"]:
            seconds = duration * 3600
            duration_str = f"{duration} heure(s)"
        elif unit.lower() in ["d", "jour", "jours"]:
            seconds = duration * 86400
            duration_str = f"{duration} jour(s)"
        else:
            await ctx.send("Unit√© de temps invalide ! Utilisez m (minutes), h (heures) ou d (jours).")
            return

        await ctx.send(f"{member.mention} a √©t√© mut√© pour {duration_str}.")
        await send_log(ctx, member, "Mute", reason, duration_str)
        await send_dm(member, "Mute", reason, duration_str)

        await asyncio.sleep(seconds)
        await member.remove_roles(muted_role)
        await ctx.send(f"{member.mention} a √©t√© d√©mut√© apr√®s {duration_str}.")
        await send_log(ctx, member, "Unmute automatique", "Fin de la dur√©e de mute")
        await send_dm(member, "Unmute", "Fin de la dur√©e de mute")

@bot.command()
async def unmute(ctx, member: discord.Member):
    if await check_permissions(ctx) and not await is_immune(member):
        muted_role = discord.utils.get(ctx.guild.roles, id=MUTED_ROLE_ID)
        await member.remove_roles(muted_role)
        await ctx.send(f"{member.mention} a √©t√© d√©mut√©.")
        await send_log(ctx, member, "Unmute", "R√©habilitation")
        await send_dm(member, "Unmute", "R√©habilitation")

@bot.command()
async def warn(ctx, member: discord.Member, *, reason="Aucune raison sp√©cifi√©e"):
    if await check_permissions(ctx) and not await is_immune(member):
        await ctx.send(f"{member.mention} a re√ßu un avertissement.")
        await send_log(ctx, member, "Warn", reason)
        await send_dm(member, "Warn", reason)

# ID des r√¥les et du salon
access_role_id = 1166113718602575892  # R√¥le qui peut utiliser la commande
ping_role_id = 1168109892851204166  # R√¥le √† mentionner avant l'embed
channel_id = 1345369756148170805  # Salon o√π l'alerte doit √™tre envoy√©e

#------------------------------------------------------------------------- Commandes Utilitaires : +vc, +alerte
@bot.command()
async def alerte(ctx, member: discord.Member, *, reason: str):
    # V√©rification si l'utilisateur a le r√¥le n√©cessaire pour ex√©cuter la commande
    if access_role_id not in [role.id for role in ctx.author.roles]:
        await ctx.send("Vous n'avez pas les permissions n√©cessaires pour utiliser cette commande.")
        return

    # Obtention du salon o√π envoyer le message
    channel = bot.get_channel(channel_id)

    # Mentionner le r√¥le et l'utilisateur qui a ex√©cut√© la commande dans le message
    await channel.send(f"<@&{ping_role_id}>\nüì¢ Alerte √©mise par {ctx.author.mention}: {member.mention} - Raison : {reason}")

    # Cr√©ation de l'embed
    embed = discord.Embed(
        title="Alerte √âmise",
        description=f"**Utilisateur:** {member.mention}\n**Raison:** {reason}",
        color=0xff0000  # Couleur rouge
    )

    # Envoi de l'embed dans le m√™me salon
    await channel.send(embed=embed)

@bot.command()
async def vc(ctx):
    guild = ctx.guild
    total_members = guild.member_count
    online_members = guild.approximate_presence_count if guild.approximate_presence_count else "N/A"
    voice_members = sum(len(voice_channel.members) for voice_channel in guild.voice_channels)
    boosts = guild.premium_subscription_count

    # Mentionner le propri√©taire (to: 792755123587645461)
    owner_member = guild.owner
    server_invite = "https://discord.gg/X4dZAt3BME"  # Lien du serveur

    embed = discord.Embed(title=f"üìä Statistiques de {guild.name}", color=discord.Color.purple())
    embed.set_thumbnail(url=guild.icon.url if guild.icon else None)
    embed.add_field(name=f"{EMOJIS['members']} Membres", value=f"**{total_members}**", inline=True)
    embed.add_field(name=f"{EMOJIS['crown']} Propri√©taire", value=f"<@792755123587645461>", inline=True)  # Mention fixe pour le Owner
    embed.add_field(name=f"{EMOJIS['voice']} En vocal", value=f"**{voice_members}**", inline=True)
    embed.add_field(name=f"{EMOJIS['boosts']} Boosts", value=f"**{boosts}**", inline=True)
    embed.add_field(name="üîó Lien du serveur", value=f"[{guild.name}]({server_invite})", inline=False)
    embed.set_footer(text="üìà Statistiques mises √† jour en temps r√©el")
    
    await ctx.send(embed=embed)
    # IMPORTANT : Permet au bot de continuer √† traiter les commandes
    await bot.process_commands(message)
    

# Token pour d√©marrer le bot (√† partir des secrets)
# Lancer le bot avec ton token depuis l'environnement  
keep_alive()
bot.run(token)
